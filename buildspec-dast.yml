version: 0.2

env:
  variables:
    REPORT_BUCKET: devsecopsreportsgenai
    REPORT_PATH: devsecops-genai/reports
    SNS_TOPIC_ARN: arn:aws:sns:us-east-1:545779432619:devsecopsgenai

phases:
  install:
    runtime-versions:
      java: corretto17
    commands:
      - echo "[Install] Docker is available:"
      - docker --version
      - docker ps

  pre_build:
    commands:
      - echo "[Pre-Build] Running ZAP Baseline Scan..."
      - chmod +x zap-dast.sh
      - ./zap-dast.sh || true

  post_build:
    commands:
      - echo "[Post-Build] Uploading ZAP report to S3..."
      - aws s3 cp zap-report/zap-report.html s3://$REPORT_BUCKET/$REPORT_PATH/zap-report.html --sse AES256

      - echo "[Post-Build] Generating presigned URL for ZAP report..."
      - export ZAP_URL=$(aws s3 presign s3://$REPORT_BUCKET/$REPORT_PATH/zap-report.html --expires-in 86400)

      - echo "[Post-Build] Sending SNS Notification..."
      - |
        MESSAGE="‚ö†Ô∏è *DAST (ZAP) Report Ready* ‚ö†Ô∏è\n\nüåê Target: devsecops-genai-staging\n\nüìÑ Report: $ZAP_URL"
        aws sns publish \
          --topic-arn "$SNS_TOPIC_ARN" \
          --subject "‚ö†Ô∏è DAST Scan Completed (ZAP)" \
          --message "$MESSAGE"

      - echo "[Post-Build] Invoking GenAI Lambda for DevSecOps report analysis..."
      - |
        aws lambda invoke \
          --function-name SendToBedrockGenAI \
          --invocation-type Event \
          --region us-east-1 \
          --payload '{}' \
          output_genai.json
      - echo "[Post-Build] GenAI Lambda invoked successfully."

      - echo "[Post-Build] Invoking Lambda to send reports to Security Hub..."
      - |
        aws lambda invoke \
          --function-name SendReportsToSecurityHub \
          --invocation-type Event \
          --region us-east-1 \
          --payload '{}' \
          output_sh.json
      - echo "[Post-Build] Lambda invoked successfully for Security Hub."

      - exit 0
