version: 0.2

env:
  variables:
    REPORT_BUCKET: devsecopsreportsgenai
    REPORT_PATH: devsecops-genai/reports
    SNS_TOPIC_ARN: arn:aws:sns:us-east-1:545779432619:devsecopsgenai

phases:
  install:
    runtime-versions:
      java: corretto17
    commands:
      - echo Docker is preinstalled and available.
      - docker --version
      - docker ps

  pre_build:
    commands:
      - echo Running ZAP Baseline Scan...
      - chmod +x zap-dast.sh
      - ./zap-dast.sh

  post_build:
    commands:
      - echo Checking if ZAP report was generated...
      - |
        if [ -f zap-report/zap-report.html ]; then
          echo "Uploading ZAP report to S3..."
          aws s3 cp zap-report/zap-report.html s3://$REPORT_BUCKET/$REPORT_PATH/zap-report.html --sse AES256

          echo "Generating presigned URL for ZAP report..."
          export ZAP_URL=$(aws s3 presign s3://$REPORT_BUCKET/$REPORT_PATH/zap-report.html --region us-east-1 --expires-in 86400)

          echo "Sending SNS Notification..."
          MESSAGE="‚ö†Ô∏è *DAST (ZAP) Report Ready* ‚ö†Ô∏è\n\nüåê Target: devsecops-genai-staging\n\nüìÑ Report: $ZAP_URL"
          aws sns publish \
            --region us-east-1 \
            --topic-arn "$SNS_TOPIC_ARN" \
            --subject "‚ö†Ô∏è DAST Scan Completed (ZAP)" \
            --message "$MESSAGE"

          # Uncomment below block to send report to Security Hub via Lambda
          # echo "Invoking Lambda to send all DevSecOps reports to Security Hub..."
          # aws lambda invoke \
          #   --function-name SendReportsToSecurityHub \
          #   --invocation-type Event \
          #   --region us-east-1 \
          #   --payload '{}' \
          #   output.json
          # echo "‚úÖ Lambda invoked successfully after DAST stage."

        else
          echo "‚ùå No ZAP report found. Skipping S3 upload, SNS notification, and Lambda."
        fi
